# This file is part of DNSDock
# MIT
#
# Copyright (C) 2014 TÃµnis Tiigi <tonistiigi@gmail.com>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

{{$GOLANG_VERSION := "1.6.3"}}
{{$ARCH:= (or .ARCH "amd64")}}
{{$GIT_COMMIT:= (or .GIT_COMMIT "develop")}}
{{$DOCKERIMAGE_VERSION:= (or .DOCKERIMAGE_VERSION "dev")}}
{{$SRC_DIR:= (or .SRC_DIR ".")}}
{{$GIT_USER:= (or .GIT_USER "rarescosma")}}
{{$DOCKER_USER:= (or .DOCKER_USER "karelian")}}

# build image
FROM alpine

RUN apk update
RUN apk upgrade
RUN apk add go>{{$GOLANG_VERSION}} go-tools>{{$GOLANG_VERSION}} git

ENV GOPATH /go
ENV PATH ${PATH}:/go/bin
ENV CGO_ENABLED 0

RUN go get -v github.com/tools/godep

RUN mkdir -p /go/src/github.com/{{$GIT_USER}}/dnsdock
WORKDIR /go/src/github.com/{{$GIT_USER}}/dnsdock
{{if .SRC_DIR}}
  MOUNT {{$SRC_DIR}}:/go/src/github.com/{{$GIT_USER}}/dnsdock
{{else}}
  RUN git clone https://github.com/{{$GIT_USER}}/dnsdock /go/src/github.com/{{$GIT_USER}}/dnsdock
  RUN git checkout {{$GIT_COMMIT}}
{{end}}

{{if .OUTPUT_DIR}}
  MOUNT {{.OUTPUT_DIR}}:/tmp/output
{{else}}
  RUN mkdir /tmp/output
{{end}}

WORKDIR /go/src/github.com/{{$GIT_USER}}/dnsdock
RUN godep restore
RUN go get -u github.com/golang/lint/golint

ENV GOARCH={{$ARCH}}
WORKDIR /go/src/github.com/{{$GIT_USER}}/dnsdock/src
ATTACH sh
RUN go build -o /tmp/output/dnsdock -ldflags "-X main.version=$(if version=$(git describe --contains HEAD 2>/dev/null); then echo $version; else echo "dev"; fi)"
RUN golint -set_exit_status
{{if eq $ARCH "amd64"}}
RUN go vet
RUN go test
{{end}}
EXPORT /tmp/output/dnsdock ./dnsdock

# run image
{{if eq $ARCH "amd64"}}
FROM alpine
{{else}}
FROM easypi/alpine-arm
{{end}}
IMPORT ./dnsdock /bin/dnsdock
ENTRYPOINT ["dnsdock"]
TAG {{$DOCKER_USER}}/kube_base_dnsdock:{{$DOCKERIMAGE_VERSION}}-{{$ARCH}}
PUSH {{$DOCKER_USER}}/kube_base_dnsdock:{{$DOCKERIMAGE_VERSION}}-{{$ARCH}}

{{if ne $DOCKERIMAGE_VERSION "dev"}}
TAG {{$DOCKER_USER}}/kube_base_dnsdock:latest-{{$ARCH}}
PUSH {{$DOCKER_USER}}/kube_base_dnsdock:latest-{{$ARCH}}
{{end}}
